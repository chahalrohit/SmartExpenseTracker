name: Android Signed APK Build

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CI: true
      INIT_CWD: ${{ github.workspace }}

    steps:
      # 1. Checkout Repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 24
          cache: 'yarn'

      # 3. Cache node_modules
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      # 4. Install Dependencies
      - name: Install dependencies
        run: yarn install --frozen-lockfile

      # 5. Setup Java for Gradle
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      # 6. Cache Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 7. Decode & Save Keystore
      - name: Decode Keystore
        run: |
          echo "${{ secrets.MYAPP_UPLOAD_STORE_FILE_BASE64 }}" | base64 --decode > android/app/my-release-key.jks

      # 8. Disable New Architecture
      - name: Disable New Architecture
        run: |
          echo "newArchEnabled=false" >> android/gradle.properties

      # 9. Clean & Build Signed APK
      - name: Clean & Build Signed APK
        run: |
          cd android
          chmod +x ./gradlew
          ./gradlew clean
          ./gradlew assembleRelease \
            -PMYAPP_UPLOAD_STORE_FILE=my-release-key.jks \
            -PMYAPP_UPLOAD_KEY_ALIAS=${{ secrets.KEY_ALIAS }} \
            -PMYAPP_UPLOAD_STORE_PASSWORD=${{ secrets.STORE_PASSWORD }} \
            -PMYAPP_UPLOAD_KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}
          cd ..

      # 10. Rename APK with Commit Hash
      - name: Rename APK
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          mv android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/SmartExpenseTracker-$COMMIT_HASH.apk

      # 11. Upload Artifact (APK)
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: SmartExpenseTracker-APK
          path: android/app/build/outputs/apk/release/SmartExpenseTracker-*.apk
          retention-days: 7
